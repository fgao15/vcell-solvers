				INSTRUCTIONS ON How to make libsbml with expat on Windows, Mac and Linux
				==============================================================
we disabled support for zlib and bzip2 unless we bundle them together too.


						WINDOWS
============================================================
NOTE: ${LIBSBMLDIR} = libsbml-3.3.2

I. Download and Extract
1. download the latest libsbml src code for example 3.0.0
2. download the latest expat src code for example 2.0.1
3. extract libsbml to any location, for example (d:\LIBSBMLDIR)
4. extract expat into the directory where libsbml was extracted so that expat-2.0.1 is a subdirectory of LIBSBMLDIR

II. Build EXPAT lib

0. Click expat-2.0.1\expat.dsw and 'Save all' which will convert it to .NET solution and projects (.sln, .proj); exit from .NET 
1. double click expat-2.0.1\expat.sln and MS .NET Visual Studio will open up.
2. make sure that 'Release' is selected (not 'Debug')
3. right click project expat in project properties, change output names from libexpat.dll to expat.dll, libexpat.lib to expat.lib, - since we use expat.dll in our Java code)
4. click build.
5. the output is expat-2.0.1\win32\bin\release\expat.lib && expat-2.0.1\win32\bin\release\expat.dll 

III. Build libsbml.lib

1. double click LIBSBMLDIR\win32\MSVC8\libsbml_expat.sln. and MS .NET Visual Studio will open up
2. make sure that 'Release' is selected (not 'Debug') and click build
3  right click project libsbml; in the project properties, we changed the output name from	libsbml.dll to sbml.dll; 
	in Configuration Properties/C/C++/Preprocessor we removed USE_BZ2, USE_ZLIB; 
	in the project itself,	we removed all source code (.cpp) related to zlib/zip).
	add expat include and lib to the corresponding directories. 
4. the output is LIBSBMLDIR\win32\bin\sbml.dll

IV. Build sbmlj.dll

1. double click LIBSBMLDIR\src\bindings\java\Java_binding_win32_expat.vcproj
2. remove all the source except libsbml_wrap.cpp, you might need to add some other src code explicitly from sbml project.
1. do the same changes to the properties of the project as above
2. the output is LIBSBMLDIR\src\bindings\java\libs\sbmlj.dll

V. Get sbmlj.jar
 import java source to eclipse and export to create sbmlj.jar
 
VI. Deploy

1. Copy sbmlj.jar into your current project using SBML/libSBML
2. Collect all the dlls (expat.dll, sbml.dll, sbmlj.dll) and copy to VCell/nativelibs/Win32 folder ('VCell IDE' - your current project 
	where SBML/libSBML is used).
 
			 MAC
 ===================================================
 Note: (you can freely change .dylib to .jnilib
 
 I. build expat
 1. ./configure --prefix=/Users/fgao/expat-2.0.1
 2. make
 3. make install, this will give you libexpat.dylib which you change to libexpat.jnilib
 
 II. build libsbml
 1. ./configure --prefix=/Users/fgao/libsbml-4.0.0-b2 --with-expat=/Users/fgao/expat-2.0.1 --with-java --with-zlib=no --with-bzip2=no
 2. make; make install 
 	this will give you both libsbml.dylib which you change to libsbml.jnilib and libsmlj.jnilib 
 3. use otool -L libsbmlj.jnilib to see the dependency and use install_name_tool to change the dependency. for example,
 	install_name_tool -id libsbml.jnilib libsbml.jnilib
 	install_name_tool -change /Users/fgao/expat-2.0.1/lib/libexpat.1.dylib @loader_path/libexpat.jnilib libsbml.jnilib
 
			 LINUX
 ======================================================
 I. build expat
 1. ./configure --prefix=/home/VCELL/fgao/expat-2.0.1
 2. make
 3. make install
 
 II. build libsbml
 1. ./configure --prefix=/home/VCELL/fgao/libsbml-4.0.0-b2 --with-expat=/home/VCELL/fgao/expat-2.0.1 --with-java --with-zlib=no --with-bzip2=no
 2. make, 
 3. run chrpath -r \$ORIGIN/ libsbml.so to change RPATH (to change RPATH at compile time is to use -Wl,-rpath -Wl,\$ORIGIN/. 
 4. use objdump -p libsbmlj.so to make sure RPATH is $ORIGIN/
 
 
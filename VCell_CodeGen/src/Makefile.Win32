#
# (C) Copyright University of Connecticut Health Center 2001.
# All rights reserved.
#
CC = cl
CPPFLAGS = /nologo /c /O2 /GR /DWIN32 /EHsc /D_CRT_SECURE_NO_DEPRECATE /MT /D_WIN32_WINNT=0x2000 /I../../ExpressionParser \
	/I..\include /I..\..\zlib -I..\..\sundials\include -I..\..\sundials\src /I../../IDAWin /I../../netcdf-3.6.2/libsrc \
	/I../../netcdf-3.6.2/cxx

!ifdef NO_MESSAGING
TARGET_LIB=	vcellWin32_NoMessaging.lib
OBJDIR = .\obj_NoMessaging
!else
CPPFLAGS = $(CPPFLAGS) /DUSE_MESSAGING /I..\..\SonicCClient\Win32\include /I..\..\SonicCClient\Win32\include\CPP
TARGET_LIB=	vcell.lib
OBJDIR = .\obj
!endif

TARGET_FORLIB = pcgwrapper.lib

FC= ifort
FOPTIONS = /O3 /Qprec-div- /QxN /compile_only /MT /nologo /names:lowercase

LIBTOOL = lib /nologo

.SUFFIXES:	.cpp.obj.f

.f{$(OBJDIR)}.obj :
	$(FC) $(FOPTIONS) /object:$@ $<

.cpp{$(OBJDIR)}.obj :		
	$(CC) $(CPPFLAGS) /Fo$@ $<

default all: $(TARGET_LIB) $(TARGET_FORLIB)

$(OBJDIR) :
    if not exist "$(OBJDIR)" mkdir "$(OBJDIR)"

FOR_OBJECTS = $(OBJDIR)\pcgwrapper.obj
CPPOBJECTS = 	\
		$(OBJDIR)\AlgebraicSystem.obj				\
		$(OBJDIR)\CartesianMesh.obj			\
		$(OBJDIR)\Contour.obj			\
		$(OBJDIR)\ContourSubdomain.obj			\
		$(OBJDIR)\ContourVarContext.obj			\
		$(OBJDIR)\ContourVariable.obj			\
		$(OBJDIR)\DataSet.obj			\
		$(OBJDIR)\DataProcessorVFrap.obj			\
		$(OBJDIR)\EllipticVolumeEqnBuilder.obj			\
		$(OBJDIR)\EqnBuilder.obj			\
		$(OBJDIR)\EqnBuilderReactionForward.obj	\
		$(OBJDIR)\FastSystem.obj			\
		$(OBJDIR)\FastSystemExpression.obj			\
		$(OBJDIR)\Feature.obj			\
		$(OBJDIR)\FieldData.obj		\
		$(OBJDIR)\FVSolver.obj			\
		$(OBJDIR)\FVUtils.obj			\
		$(OBJDIR)\MembraneEqnBuilderForward.obj	\
		$(OBJDIR)\MembraneEqnBuilderDiffusion.obj	\
		$(OBJDIR)\MembraneRegion.obj	\
		$(OBJDIR)\MembraneRegionEqnBuilder.obj	\
		$(OBJDIR)\MembraneRegionVarContext.obj	\
		$(OBJDIR)\MembraneRegionVarContextExpression.obj	\
		$(OBJDIR)\MembraneRegionVariable.obj	\
		$(OBJDIR)\MembraneVarContext.obj		\
		$(OBJDIR)\MembraneVarContextExpression.obj	\
		$(OBJDIR)\MembraneVariable.obj		\
		$(OBJDIR)\Mesh.obj			\
		$(OBJDIR)\ODESolver.obj	\
		$(OBJDIR)\ParticleContext.obj		\
		$(OBJDIR)\PDESolver.obj	\
		$(OBJDIR)\RandomVariable.obj	\
		$(OBJDIR)\Region.obj			\
		$(OBJDIR)\Scheduler.obj			\
		$(OBJDIR)\SerialScheduler.obj			\
		$(OBJDIR)\SimTool.obj			\
		$(OBJDIR)\Simulation.obj			\
		$(OBJDIR)\SimulationExpression.obj	\
		$(OBJDIR)\SimulationMessaging.obj	\
		$(OBJDIR)\Solver.obj			\
		$(OBJDIR)\SparseLinearSolver.obj		\
		$(OBJDIR)\SparseMatrixEqnBuilder.obj		\
		$(OBJDIR)\SparseMatrixPCG.obj		\
		$(OBJDIR)\SparseVolumeEqnBuilder.obj		\
		$(OBJDIR)\StructuredPDESolver.obj		\
		$(OBJDIR)\SundialsPdeScheduler.obj		\
		$(OBJDIR)\Timer.obj			\
		$(OBJDIR)\VarContext.obj			\
		$(OBJDIR)\Variable.obj			\
		$(OBJDIR)\VCellModel.obj			\
		$(OBJDIR)\VolumeRegion.obj			\
		$(OBJDIR)\VolumeRegionEqnBuilder.obj			\
		$(OBJDIR)\VolumeRegionVarContext.obj			\
		$(OBJDIR)\VolumeRegionVarContextExpression.obj			\
		$(OBJDIR)\VolumeRegionVariable.obj			\
		$(OBJDIR)\VolumeVarContext.obj			\
		$(OBJDIR)\VolumeVarContextExpression.obj			\
		$(OBJDIR)\VolumeVariable.obj

$(TARGET_LIB):	$(OBJDIR) $(CPPOBJECTS) $(FOR_OBJECTS)
	$(LIBTOOL) /out:$@ $(CPPOBJECTS) $(FOR_OBJECTS) 
		
$(TARGET_FORLIB): $(OBJDIR) $(FOR_OBJECTS)
	$(LIBTOOL) /out:$(TARGET_FORLIB) $(FOR_OBJECTS)
	
clean:
	if exist "$(OBJDIR)" del /Q $(OBJDIR)\*.*
	del $(TARGET_LIB) $(TARGET_FORLIB)
	
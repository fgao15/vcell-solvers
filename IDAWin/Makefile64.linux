CC = g++

CPPFLAGS = -O2 -fexceptions -DUNIX -DLINUX64 -DUSE_MESSAGING -I. -I../ExpressionParser -I../sundials/include -I../sundials/src \
		-I../VCell/include -I../SonicCClient64/Linux_AS4_64/include/CPP -I../SonicCClient64/Linux_AS4_64/include

VCELLIDALIB = libvcellIDA.a

LIBS =  ../ExpressionParser/libExpParser.a \
       ../sundials/lib/libsundials_ida.a  \
       ../sundials/lib/libsundials_cvode.a  \
	   ../sundials/lib/libsundials_nvecserial.a \
	   ../sundials/lib/libsundials.a -L../SonicCClient64/Linux_AS4_64/bin/release/ -lsmq -lpthread 

LIBTOOL = ar cru
			
%.o : %.cpp
	$(CC) -c $(CPPFLAGS) $<


CPPOBJECTS = VCellSundialsSolver.o \
			VCellIDASolver.o \
			VCellCVodeSolver.o \
			OdeResultSet.o \
			StoppedByUserException.o 

STDALONE_CPPOBJECTS = SundialsSolverStandalone.o SimulationMessaging.o 
STDALONE_TARGET = SundialsSolverStandalone

default all : $(VCELLIDALIB) $(STDALONE_TARGET)

$(VCELLIDALIB): $(CPPOBJECTS)
	$(LIBTOOL) $@ $(CPPOBJECTS)		
				
$(STDALONE_TARGET): $(VCELLIDALIB) $(STDALONE_CPPOBJECTS)
	$(CC) -o $@ $(STDALONE_CPPOBJECTS) $(VCELLIDALIB) $(LIBS)	

SimulationMessaging.o : ../VCell/include/VCELL/SimulationMessaging.h ../VCell/src/SimulationMessaging.cpp
	$(CC) -c $(CPPFLAGS) ../VCell/src/SimulationMessaging.cpp

clean:
	rm $(STDALONE_TARGET) $(VCELLIDALIB) $(CPPOBJECTS) $(STDALONE_CPPOBJECTS)

depend:
	makedepend -Y -f Makefile64.linux -- $(CFLAGS) -- *.c *.cpp

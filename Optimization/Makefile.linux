CC = gcc
C++ = g++

CFLAGS = -c -O2 -fPIC -fexceptions -DLINUX -I../ExpressionParser -I. -I../fsqp -I../IDAWin -I../JNI/Linux/include -I../JNI/Linux/include/linux

LIBS =	../IDAWin/libida.a ../ExpressionParser/libExpParser.a ../fsqp/libcfsqp.a

DLL_TARGET = libNativeSolvers.so

.SUFFIXES:		.cpp.o

.cpp.o:
	$(CC) $(CFLAGS) $<

default all:	$(DLL_TARGET)

CPPOBJECTS = cbit_vcell_opt_solvers_NativeOptSolver.o \
			cbit_vcell_solvers_NativeIDASolver.o \
			VCellIDASolver.o \
			OdeResultSet.o \
			CFSQPOptSolver.o \
			Constraint.o \
			OdeOptJob.o \
			OdeMultiShootingOptJob.o \
			OptSolver.o	\
			StoppedByUserException.o \
			MemoryManager.o

$(DLL_TARGET) : $(CPPOBJECTS) $(LIBS)
	$(C++) -shared -o $@ $(CPPOBJECTS) $(LIBS)	
	
VCellIDASolver.o : 	../IDAWin/VCellIDASolver.cpp  ../IDAWin/VCellIDASolver.h
	$(C++) $(CFLAGS) ../IDAWin/VCellIDASolver.cpp

OdeResultSet.o : 	../IDAWin/OdeResultSet.cpp  ../IDAWin/OdeResultSet.h
	$(C++) $(CFLAGS)  ../IDAWin/OdeResultSet.cpp
		
cbit_vcell_solvers_NativeIDASolver.o : ../IDAWin/cbit_vcell_solvers_NativeIDASolver.cpp ../IDAWin/cbit_vcell_solvers_NativeIDASolver.h
	$(C++) $(CFLAGS) ../IDAWin/cbit_vcell_solvers_NativeIDASolver.cpp
	
clean:
	rm $(DLL_TARGET) $(CPPOBJECTS)
